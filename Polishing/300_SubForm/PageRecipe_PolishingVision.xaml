<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WaferPolishingSystem.Form"
      xmlns:UserInterface="clr-namespace:UserInterface" x:Class="WaferPolishingSystem.Form.PageRecipe_PolishingVision"
      mc:Ignorable="d" 
      d:DesignHeight="824" d:DesignWidth="1278"
      Title="PageRecipe_Vision" Background="#FFF7F7F7" Loaded="Page_Loaded" Unloaded="Page_Unloaded">

    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>
        <Border Grid.ColumnSpan="10" Grid.RowSpan="10" BorderBrush="Black" BorderThickness="1"/>
        <Grid Grid.Row="0" Grid.ColumnSpan="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="130"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="150"/>
            </Grid.ColumnDefinitions>
            <Border BorderBrush="Black" BorderThickness="1"/>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                    <StackPanel.Resources>
                        <Style TargetType="Label">
                            <Setter Property="FontSize"                 Value="14"/>
                            <Setter Property="Padding"                  Value="0"/>
                            <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                        </Style>
                    </StackPanel.Resources>
                    <Label>
                        <TextBlock Text="Recipe : "/>
                    </Label>
                    <Label>
                        <TextBlock Name="lb_Recipe" 
                                   Text="-"/>
                    </Label>
                </StackPanel>
                <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10,0,0,0">
                    <StackPanel.Resources>
                        <Style TargetType="Label">
                            <Setter Property="FontSize"                 Value="18"/>
                            <Setter Property="Padding"                  Value="0"/>
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                            <Setter Property="FontWeight"               Value="Bold"/>
                        </Style>
                    </StackPanel.Resources>
                    <Label>
                        <TextBlock Text="Current Model :"/>
                    </Label>
                    <Label>
                        <TextBlock Name="lb_Title" 
                                   Text="-"/>
                    </Label>
                </StackPanel>
            </Grid>

            <UserInterface:UserButton Grid.Column="1" x:Name="bn_MoveVisn"      Content="Move Vision Pos." Click="bn_MoveVisn_Click" FontSize="13" FontWeight="Bold"/>
            <UserInterface:UserButton Grid.Column="2" x:Name="bn_MotionControl" Content="Motion"           Click="bn_MotionControl_Click"/>
            <UserInterface:UserButton Grid.Column="3" x:Name="bn_EndModify"     Content="End Modify"       Click="bn_EndModify_Click"/>
        </Grid>

        <GroupBox Grid.Column="0" Grid.Row="1" Name="gb_Common" Header="Common Vision" Grid.RowSpan="1" Background="White" Margin="3">
            <Grid Grid.Column="0" Grid.Row="0">
                <UserInterface:AlignControl Grid.Row="1" x:Name="ac_Align" BorderBrush="Gray" BorderThickness="1"/>
            </Grid>
        </GroupBox>

        <Grid Grid.Column="1" Grid.Row="1" Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="4*"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="7*"/>
                    <RowDefinition Height="4.5*"/>
                </Grid.RowDefinitions>

                <GroupBox Grid.Column="0" Grid.Row="0" Header="Image Control">
                    <UniformGrid Columns="3" Rows="1">
                        <UserInterface:UserButton x:Name="bn_Ruler"        Content="Ruler" FontSize="14" Margin="2" CornerRadius="3" Click="bn_Ruler_Click" />
                        <UserInterface:UserButton x:Name="bn_SaveImg"  Content="SaveImg"         FontSize="14" Margin="3" CornerRadius="3" Click="bn_SaveImg_Click" />
                        <UserInterface:UserButton x:Name="bn_Open"         Content="Open"  FontSize="14" Margin="2" CornerRadius="3" Click="bn_Open_Click"/>
                        <UserInterface:UserButton x:Name="bn_ViewEdge"  Content="View Edge"         FontSize="14" Margin="3" CornerRadius="3" Click="bn_ViewEdge_Click" IsEnabled="{Binding ElementName=rb_Model, Path=IsChecked}" Visibility="Hidden"/>
                        <!--
                        <UserInterface:UserButton x:Name="bn_Draw"         Content="선택"  FontSize="14" Margin="2" CornerRadius="3" Click="bn_Draw_Click" Visibility="Hidden"/>
                        <UserInterface:UserButton x:Name="bn_Move"         Content="탐색"  FontSize="14" Margin="2" CornerRadius="3" Click="bn_Move_Click" Visibility="Hidden"/>
                        -->
                    </UniformGrid>
                </GroupBox>
                <GroupBox Grid.Column="0" Grid.Row="1" Header="Zoom Control" Visibility="Hidden">
                    <UniformGrid Rows="2" Columns="3">
                        <UserInterface:UserButton x:Name="bn_Zoom_p2"      Content="x 0.2" FontSize="14" Margin="2" CornerRadius="3" Click="bn_Zoom_Click"/>
                        <UserInterface:UserButton x:Name="bn_Zoom_p4"      Content="x 0.4" FontSize="14" Margin="2" CornerRadius="3" Click="bn_Zoom_Click"/>
                        <UserInterface:UserButton x:Name="bn_Zoom_p8"      Content="x 0.8" FontSize="14" Margin="2" CornerRadius="3" Click="bn_Zoom_Click"/>
                        <UserInterface:UserButton x:Name="bn_Zoom_1"       Content="x 1.0" FontSize="14" Margin="2" CornerRadius="3" Click="bn_Zoom_Click"/>
                        <UserInterface:UserButton x:Name="bn_Zoom_1p5"     Content="x 1.5" FontSize="14" Margin="2" CornerRadius="3" Click="bn_Zoom_Click"/>
                        <UserInterface:UserButton x:Name="bn_Zoom_Fit"     Content="Fit"   FontSize="14" Margin="2" CornerRadius="3" Click="bn_Zoom_Click"/>
                    </UniformGrid>
                </GroupBox>
                
                <GroupBox Grid.Column="0" Grid.Row="1" Header="Mark Control">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>
                        <UniformGrid Columns="2" Rows="2">
                            <UserInterface:UserButton x:Name="bn_Live"     Content="Live"            FontSize="14" Margin="3" CornerRadius="3" Click="bn_Live_Click" />
                            <UserInterface:UserButton x:Name="bn_OneShot"  Content="One Shot"        FontSize="14" Margin="3" CornerRadius="3" Click="bn_OneShot_Click" />
                            <UserInterface:UserButton x:Name="bn_SetMark"  Content="Set Mark"        FontSize="14" Margin="3" CornerRadius="3" Click="bn_SetMark_Click" />
                            <UserInterface:UserButton x:Name="bn_Search"   Content="SearchTest"      FontSize="14" Margin="3" CornerRadius="3" Click="bn_Search_Click" />
                        </UniformGrid>
                        <UserInterface:UserButton Grid.Row="1" x:Name="bn_SaveMarkImage" Content="Save Mark Image" FontSize="16" Margin="3" CornerRadius="3" FontWeight="Bold" BorderThickness="2" Click="bn_SaveMark_Click"/>
                    </Grid>
                </GroupBox>

                <GroupBox Grid.Row="2" Grid.Column="0" Name="gb_CamParam"  Header="Camera Parameter">
                    <UniformGrid Rows="2">
                        <UserInterface:UserIntCamSlider x:Name="uis_Exposuretime" UISTitleWidth="85"/>
                        <UserInterface:UserIntCamSlider x:Name="uis_Gain"         UISTitleWidth="85"/>
                    </UniformGrid>
                </GroupBox>

                <GroupBox Grid.Column="1" Grid.RowSpan="3" Header="ROI Control">
                    <Grid>
                        <UserInterface:AlignControl Grid.Column="0" x:Name="ac_Mark" BorderBrush="Gray" BorderThickness="1" Margin="3" PreviewMouseDown="ac_Mark_PreviewMouseDown" PreviewMouseUp="ac_Mark_PreviewMouseUp"/>
                    </Grid>
                </GroupBox>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="1.4*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <GroupBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Name="gb_Light" Header="Light">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <UniformGrid Columns="2">
                            <UserInterface:UserSlider x:Name="us_LightW"  USTitle="White :" USTitleVerticalAlign="Center" USTitleHorizontalAlign="Center" USTitleForeground="Black" USTitleWidth="50" USValue="0" USValueWidth="40" USMinimum="0" USMaximum="255" PreviewMouseUp="us_LightW_PreviewMouseUp" PreviewKeyDown="us_LightW_PreviewKeyDown"/>
                            <UserInterface:UserSlider x:Name="us_LightIR" USTitle="IR :"    USTitleVerticalAlign="Center" USTitleHorizontalAlign="Center" USTitleForeground="Black" USTitleWidth="50" USValue="0" USValueWidth="40" USMinimum="0" USMaximum="255" PreviewMouseUp="us_LightIR_PreviewMouseUp" PreviewKeyDown="us_LightIR_PreviewKeyDown"/>
                        </UniformGrid>
                        <Grid Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="55"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="IR Filter :" Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                            <UserInterface:UserToggle Grid.Column="1" x:Name="tg_shutter"/>
                        </Grid>
                    </Grid>
                </GroupBox>
                <Grid Grid.Row="1" Grid.ColumnSpan="2">
                    
                    <GroupBox Grid.Column="0" Header="Algorithm">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <UniformGrid Columns="2">
                                <RadioButton Name="rb_Model"   CommandParameter="0" Grid.Row="0" GroupName="rbAlgorithm" Content="Model Finder"     Checked="RadioButton_Checked" FontSize="14" Margin="3" VerticalAlignment="Center"/>
                                <RadioButton Name="rb_Pattern" CommandParameter="1" Grid.Row="1" GroupName="rbAlgorithm" Content="Pattern Matching" Checked="RadioButton_Checked" FontSize="14" Margin="3" VerticalAlignment="Center"/>
                            </UniformGrid>

                            <GroupBox Grid.Row="1" Header="Parameters">
                                <ScrollViewer>
                                    <StackPanel Orientation="Vertical">
                                        <UniformGrid Columns="3">
                                            <UserInterface:UserParam x:Name="up_Acceptance" UPTitle="Acceptance : "   UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" UPUnit="%"/>
                                            <UserInterface:UserParam x:Name="up_Certainty"  UPTitle="Certainty : "    UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" UPUnit="%"/>
                                            <UserInterface:UserParam x:Name="up_Smoothness" UPTitle="Smoothness : "  UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" UPUnit="%"/>
                                            <StackPanel Name="sp_Detail" Orientation="Horizontal" VerticalAlignment="Center">
                                                <Label Content="DetailLevel :" VerticalAlignment="Center" Padding="0"/>
                                                <ComboBox Name="cb_Detail" Width="80" SelectionChanged="cb_Detail_SelectionChanged" VerticalAlignment="Center">
                                                    <ComboBoxItem Content="MIDEUM"/>
                                                    <ComboBoxItem Content="HIGH"/>
                                                    <ComboBoxItem Content="VERYHIGH"/>
                                                </ComboBox>
                                            </StackPanel>
                                            <UserInterface:UserParam x:Name="up_ScaleMargin" UPTitle="Scale (±) : "  UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" UPUnit="%"/>
                                            <UserInterface:UserParam x:Name="up_AngleMargin" UPTitle="Angle (±) : "  UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" UPUnit="˚"/>
                                        </UniformGrid>
                                        <UniformGrid Columns="2">
                                        </UniformGrid>
                                        <!--
                                        <UniformGrid Name="ug_Scale" Columns="3">
                                            <CheckBox x:Name="chk_Scale" Content="Scale Enable" VerticalAlignment="Center"/>
                                            <UserInterface:UserParam IsEnabled="{Binding ElementName=chk_Scale, Path=IsChecked}"       x:Name="up_ScaleMinimum" UPTitle="ScaleMin : "  UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" UPUnit=""/>
                                            <UserInterface:UserParam IsEnabled="{Binding ElementName=chk_Scale, Path=IsChecked}"       x:Name="up_ScaleMaximum" UPTitle="ScaleMax : "  UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" UPUnit=""/>
                                        </UniformGrid>
                                        <UniformGrid Columns="3">
                                            <CheckBox x:Name="chk_AngleEnable" Content="AngleMode" VerticalAlignment="Center"/>
                                            <UserInterface:UserParam IsEnabled="{Binding ElementName=chk_AngleEnable, Path=IsChecked}" x:Name="up_NegAngle"   UPTitle="Neg Angle : "  UPUnit="deg" UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" />
                                            <UserInterface:UserParam IsEnabled="{Binding ElementName=chk_AngleEnable, Path=IsChecked}" x:Name="up_PosAngle"   UPTitle="Pos Angle : "  UPUnit="deg" UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" />
                                        </UniformGrid>
                                        -->
                                        <UniformGrid x:Name="ug_Pattern" Columns="3" Grid.Row="1">
                                            <UserInterface:UserParam x:Name="up_Angle"      UPTitle="Angle : "       UPUnit="deg" UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" />
                                            <UserInterface:UserParam x:Name="up_Tolerance"  UPTitle="Tolerance : "   UPUnit="%"   UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" />
                                            <UserInterface:UserParam x:Name="up_Accuracy"   UPTitle="Accuracy : "    UPUnit="%"   UPUnitWidth="25" UPTitleWidth="75" UPValueBorderBrush="Gray" UPValueBorderThickness="1" UPValueBackground="White" />
                                            <StackPanel Name="sp_Interpolation" Orientation="Horizontal" VerticalAlignment="Center">
                                                <Label Content="InterpolMod :" VerticalAlignment="Center"/>
                                                <ComboBox Name="cb_Interpolation" Width="70" SelectedIndex="0" SelectionChanged="cb_Detail_SelectionChanged" VerticalAlignment="Center">
                                                    <ComboBoxItem Content="BICUBIC         "/>
                                                    <ComboBoxItem Content="BILINEAR        "/>
                                                    <ComboBoxItem Content="NEAREST_NEIGHBOR"/>
                                                </ComboBox>
                                            </StackPanel>
                                        </UniformGrid>
                                    </StackPanel>
                                </ScrollViewer>
                            </GroupBox>
                        </Grid>
                    </GroupBox>
                    
                </Grid>
                <Grid Grid.Row="2" Grid.ColumnSpan="2">
                    <GroupBox Header="Search Result">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <ListBox Name="listbox_ResultTest" SelectionMode="Extended">
                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Copy" Click="listbox_ResultText_Copy_Click"/>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Padding" Value="0"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                            <UserInterface:UserButton Grid.Column="1" 
                                                      Content="Clr" 
                                                      Margin="2" 
                                                      CornerRadius="3" 
                                                      FontSize="12"
                                                      Click="bn_ClearResult_Click"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </Grid>
        </Grid>

        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="390"/>
                <ColumnDefinition Width="425"/>
            </Grid.ColumnDefinitions>
            <GroupBox Header="Rectangle Control" Margin="3">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="215"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <UniformGrid Grid.Row="0" Columns="2">
                            <UserInterface:UserButton x:Name="bn_AllView"   Content="All View"      FontSize="14" Margin="1" CornerRadius="3" Click="bn_AllView_Click" IsEnabled="False"/>
                            <UserInterface:UserButton x:Name="bn_Reset"     Content="Reset"         FontSize="14" Margin="1" CornerRadius="3" Click="bn_Reset_Click" />
                            <UserInterface:UserButton x:Name="bn_Copy"      Content="Copy"          FontSize="14" Margin="1" CornerRadius="3" Click="bn_Copy_Click" />
                            <UserInterface:UserButton x:Name="bn_Paste"     Content="Paste"         FontSize="14" Margin="1" CornerRadius="3" Click="bn_Paste_Click" />
                        </UniformGrid>
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <Label Content="Copy From :"/>
                            <Label Name="lb_CopyFrom" Content="-"/>
                        </StackPanel>
                        <ToggleButton Grid.Row="2" x:Name="tb_Link" Template="{DynamicResource ButtonTemplate}" Content="Model - Mil Link" IsChecked="True" Click="tb_Link_Click">
                            <ToggleButton.Resources>
                                <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type ToggleButton}">
                                    <Grid x:Name="grid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0" x:Name="border"/>
                                        <Label Grid.Column="1" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Background" TargetName="border">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="/030_Image/link.png" Stretch="Uniform"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Background" TargetName="border">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="/030_Image/broken-link.png" Stretch="Uniform"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Resources>
                        </ToggleButton>
                    </Grid>

                    <Grid Grid.Column="1" Margin="30,0,0,0" Name="grid_SelROI">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Sel :"/>
                            <Label Content="{Binding Name}" Width="50"/>
                            <Label Content="Offset :"/>
                            <TextBox Text="{Binding Path=Offset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="50" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <Label                    Width="40"  Content="X :"/>
                            <Label                    Width="80"  Content="{Binding X, StringFormat={}{0:#,#0.000}}" Name="lb_SelROI_X" HorizontalContentAlignment="Center"/>
                            <UserInterface:UserButton Width="30"  Content="△" CornerRadius="3" Tag="11" Click="SelectedROIResize_Click"/>
                            <UserInterface:UserButton Width="30"  Content="▽" CornerRadius="3" Tag="12" Click="SelectedROIResize_Click"/>
                        </StackPanel>
                        <StackPanel Grid.Row="2" Orientation="Horizontal">
                            <Label                    Width="40"  Content="Y :"/>
                            <Label                    Width="80"  Content="{Binding Y, StringFormat={}{0:#,#0.000}}" Name="lb_SelROI_Y" HorizontalContentAlignment="Center"/>
                            <UserInterface:UserButton Width="30"  Content="△" CornerRadius="3" Tag="21" Click="SelectedROIResize_Click"/>
                            <UserInterface:UserButton Width="30"  Content="▽" CornerRadius="3" Tag="22" Click="SelectedROIResize_Click"/>
                        </StackPanel>
                        <StackPanel Grid.Row="3" Orientation="Horizontal">
                            <Label                    Width="40"  Content="W :"/>
                            <Label                    Width="80"  Content="{Binding W, StringFormat={}{0:#,#0.000}}" Name="lb_SelROI_W" HorizontalContentAlignment="Center"/>
                            <UserInterface:UserButton Width="30"  Content="△" CornerRadius="3" Tag="31" Click="SelectedROIResize_Click"/>
                            <UserInterface:UserButton Width="30"  Content="▽" CornerRadius="3" Tag="32" Click="SelectedROIResize_Click"/>
                        </StackPanel>
                        <StackPanel Grid.Row="4" Orientation="Horizontal">
                            <Label                    Width="40"  Content="H :"/>
                            <Label                    Width="80"  Content="{Binding H, StringFormat={}{0:#,#0.000}}" Name="lb_SelROI_H" HorizontalContentAlignment="Center"/>
                            <UserInterface:UserButton Width="30"  Content="△" CornerRadius="3" Tag="41" Click="SelectedROIResize_Click"/>
                            <UserInterface:UserButton Width="30"  Content="▽" CornerRadius="3" Tag="42" Click="SelectedROIResize_Click"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Column="1" Header="Rectangle Info" Margin="3">
                <DataGrid Grid.Column="0" Grid.Row="1" Name="dg_ROI" AutoGenerateColumns="False" Margin="5,3" SelectionMode="Single" CanUserDeleteRows="False" CanUserAddRows="False" CanUserResizeRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" ColumnHeaderHeight="38" HeadersVisibility="Column" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" FontSize="14" GotFocus="dg_ROI_GotFocus" SelectionChanged="dg_ROI_SelectionChanged">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#2242a2e7"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Background"                   Value="LightGray"/>
                            <Setter Property="HorizontalContentAlignment"   Value="Center"/>
                            <Setter Property="VerticalContentAlignment"     Value="Center"/>
                            <Setter Property="BorderThickness"              Value="0,0,1,1"/>
                            <Setter Property="BorderBrush"                  Value="Gray"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="80" Header="Name"   IsReadOnly="true" Binding="{Binding Path=NAME,    Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Width="70"  Header="X&#10;(px)"      IsReadOnly="true" Binding="{Binding Path=X,       Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Width="70"  Header="Y&#10;(px)"      IsReadOnly="true" Binding="{Binding Path=Y,       Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Width="70"  Header="Width&#10;(px)"  IsReadOnly="true" Binding="{Binding Path=WIDTH,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Width="70"  Header="Height&#10;(px)" IsReadOnly="true" Binding="{Binding Path=HEIGHT,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Model ROI">
                                    <Setter Property="Background" Value="#63C80000"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Search ROI">
                                    <Setter Property="Background" Value="#63C8C800"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
            </GroupBox>
            <GroupBox Grid.Column="2" Header="Milling List" Margin="3">
            <Grid>
                <DataGrid Grid.Column="1" Name="dg_Milling" AutoGenerateColumns="False" Margin="5,3" SelectionMode="Single" CanUserDeleteRows="False" CanUserAddRows="False" CanUserResizeRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" ColumnHeaderHeight="38" HeadersVisibility="Column" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" FontSize="14" GotFocus="dg_Milling_GotFocus" SelectionChanged="dg_Milling_SelectionChanged">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#2242a2e7"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Background"                   Value="LightGray"/>
                            <Setter Property="HorizontalContentAlignment"   Value="Center"/>
                            <Setter Property="VerticalContentAlignment"     Value="Center"/>
                            <Setter Property="BorderThickness"              Value="0,0,1,1"/>
                            <Setter Property="BorderBrush"                  Value="Gray"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Used">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=ENABLE, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn IsReadOnly="True"  Width="60" Header="Name"        Binding="{Binding Path=NAME,      Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <!--
                        <DataGridTextColumn IsReadOnly="True"  Width="60" Header="X&#10;(px)"      Binding="{Binding Path=Xp,        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn IsReadOnly="True"  Width="60" Header="Y&#10;(px)"      Binding="{Binding Path=Yp,        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn IsReadOnly="True"  Width="60" Header="Width&#10;(px)"  Binding="{Binding Path=Wp,        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn IsReadOnly="True"  Width="60" Header="Height&#10;(px)" Binding="{Binding Path=Hp,        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        -->
                        <DataGridTextColumn IsReadOnly="False" Width="50" Header="X&#10;(mm)"      Binding="{Binding Path=Xm,        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="{x:Type TextBox}">
                                    <EventSetter Event="TextChanged" Handler="TextBox_XChanged"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="False" Width="50" Header="Y&#10;(mm)"      Binding="{Binding Path=Ym,        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="{x:Type TextBox}">
                                        <EventSetter Event="TextChanged" Handler="TextBox_YChanged"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="False" Width="50" Header="Width&#10;(mm)"  Binding="{Binding Path=Wm,        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="{x:Type TextBox}">
                                    <EventSetter Event="TextChanged" Handler="TextBox_WidthChanged"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="True" Width="50" Header="Height&#10;(mm)" Binding="{Binding Path=Hm,        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="{x:Type TextBox}">
                                    <EventSetter Event="TextChanged" Handler="TextBox_HeightChanged"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                        <!-- New Parameter -->
                        <DataGridTextColumn IsReadOnly="False" Width="50" Header="Y Pitch&#10;(mm)" Binding="{Binding Path=Pitch,        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">    
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="{x:Type TextBox}">
                                    <EventSetter Event="TextChanged" Handler="TextBox_PitchChanged"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                            
                        </DataGridTextColumn>
                        <DataGridTextColumn IsReadOnly="False" Width="50" Header="Path&#10;Count" Binding="{Binding Path=PathCount,        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="{x:Type TextBox}">
                                    <EventSetter Event="TextChanged" Handler="TextBox_PathCountChanged"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Milling1">
                                    <Setter Property="Background" Value="#9900C800"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Milling2">
                                    <Setter Property="Background" Value="#990000C8"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Milling3">
                                    <Setter Property="Background" Value="#99C800C8"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Milling4">
                                    <Setter Property="Background" Value="#9900C8C8"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Milling5">
                                    <Setter Property="Background" Value="#99C8C800"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Milling6">
                                    <Setter Property="Background" Value="#99C80000"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Milling7">
                                    <Setter Property="Background" Value="#996464C8"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Milling8">
                                    <Setter Property="Background" Value="#99C86400"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Milling9">
                                    <Setter Property="Background" Value="#996400C8"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NAME}" Value="Milling10">
                                    <Setter Property="Background" Value="#9900C864"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>

            </Grid>
        </GroupBox>
        </Grid>
    </Grid>
</Page>
